12.16

this: 현재 클래스이 멤버에 접근하겠다는 뜻

class는 private로 하면 문제된다. 상속받지 못하게 하려면 final, 
같은패키지에서만 객체 생성이나 다른패키지 포함 자식클래스에서 상속만 허용하게 하려면 protected 쓴다.

추상클래스는 실체클래스의 공통 멤버를 추출해 따로 선언한것: 메소드 내용물 있어야함
추상클래스의 메소드를 자식 클래스가 재정의 할 수 있다.

인터페이스도 추상클래스처럼 객체 생성 안된다. 자식클래스 통해서 객체화 한다.

부모클래스로 매개변수 만들면 부모가 추상이든 실체든 자식 클래스 받을 수 있다.

인터페이스는 무조건 상수, 추상메소드라 final, abstract 안붙여도 된다.

인터페이스로 new 로 받았던 객체는, 인터페이스 변수가 다른걸 가리키면 가비지로 알아서 사라진다.

java8부터는 인터페이스에 무슨 기능이 추가될까? 추상메소드 외에 
    1. 디폴드 메서드: 같은 패키지 내에 소속된 클래스에서만 사용. 실행내용까지 작성 가능하다, 재정의할 수 있다.
    2. 정적메소드: 객체없이 인터페이스만으로도 호출 가능하다.
    3. 익명구현 객체:
    인터페이스 변수 = new 인터페이스(){
        //인터페이스에서 선언된 추상메소드의 실제 메소드 구현
    }

    자동타입 변환, 강제타입 변환부터 다시보기.