{\rtf1\ansi\ansicpg1252\cocoartf2577
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;\red89\green138\blue67;\red23\green23\blue23;\red202\green202\blue202;
\red183\green111\blue179;\red70\green137\blue204;\red194\green126\blue101;\red67\green192\blue160;\red140\green211\blue254;
\red212\green214\blue154;\red205\green173\blue106;\red167\green197\blue152;\red89\green138\blue67;\red23\green23\blue23;
\red66\green179\blue255;}
{\*\expandedcolortbl;;\cssrgb\c41569\c60000\c33333;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c77255\c52549\c75294;\cssrgb\c33725\c61176\c83922;\cssrgb\c80784\c56863\c47059;\cssrgb\c30588\c78824\c69020;\cssrgb\c61176\c86275\c99608;
\cssrgb\c86275\c86275\c66667;\cssrgb\c84314\c72941\c49020;\cssrgb\c70980\c80784\c65882;\cssrgb\c41569\c60000\c33333;\cssrgb\c11765\c11765\c11765;
\cssrgb\c30980\c75686\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // 17474 
\f1 \'c0\'e7\'b1\'cd\'c7\'d4\'bc\'f6\'b0\'a1
\f0  
\f1 \'b9\'ba\'b0\'a1\'bf\'e4.cpp
\f0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 #include\cf6 \strokec6  \cf7 \strokec7 <stdio.h>\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #include\cf6 \strokec6  \cf7 \strokec7 <string>\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 using\cf4 \strokec4  \cf6 \strokec6 namespace\cf4 \strokec4  \cf8 \strokec8 std\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb3 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 n\cf4 \strokec4 ;\cb1 \
\
\cf6 \cb3 \strokec6 void\cf4 \strokec4  \cf10 \strokec10 recursion\cf4 \strokec4 (\cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 cnt\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3     \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "%s\cf11 \strokec11 \\"
\f1 \cf7 \strokec7 \'c0\'e7\'b1\'cd\'c7\'d4\'bc\'f6\'b0\'a1
\f0  
\f1 \'b9\'ba\'b0\'a1\'bf\'e4
\f0 ?\cf11 \strokec11 \\"\\n\cf7 \strokec7 "\cf4 \strokec4 ,\cf8 \strokec8 string\cf4 \strokec4 (\cf12 \strokec12 4\cf4 \strokec4 *\cf9 \strokec9 cnt\cf4 \strokec4 ,\cf7 \strokec7 '_'\cf4 \strokec4 ).\cf10 \strokec10 c_str\cf4 \strokec4 ());\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4 (\cf9 \strokec9 cnt\cf4 \strokec4 ==\cf9 \strokec9 n\cf4 \strokec4 )\cb1 \
\cb3     \{\cb1 \
\cb3         \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "%s\cf11 \strokec11 \\"
\f1 \cf7 \strokec7 \'c0\'e7\'b1\'cd\'c7\'d4\'bc\'f6\'b4\'c2
\f0  
\f1 \'c0\'da\'b1\'e2
\f0  
\f1 \'c0\'da\'bd\'c5\'c0\'bb
\f0  
\f1 \'c8\'a3\'c3\'e2\'c7\'cf\'b4\'c2
\f0  
\f1 \'c7\'d4\'bc\'f6\'b6\'f3\'b3\'d7
\f0 \cf11 \strokec11 \\"\\n\cf7 \strokec7 "\cf4 \strokec4 ,\cf8 \strokec8 string\cf4 \strokec4 (\cf12 \strokec12 4\cf4 \strokec4 *\cf9 \strokec9 cnt\cf4 \strokec4 ,\cf7 \strokec7 '_'\cf4 \strokec4 ).\cf10 \strokec10 c_str\cf4 \strokec4 ());\cb1 \
\cb3         \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "%s
\f1 \'b6\'f3\'b0\'ed
\f0  
\f1 \'b4\'e4\'ba\'af\'c7\'cf\'bf\'b4\'c1\'f6
\f0 .\cf11 \strokec11 \\n\cf7 \strokec7 "\cf4 \strokec4 ,\cf8 \strokec8 string\cf4 \strokec4 (\cf12 \strokec12 4\cf4 \strokec4 *\cf9 \strokec9 cnt\cf4 \strokec4 ,\cf7 \strokec7 '_'\cf4 \strokec4 ).\cf10 \strokec10 c_str\cf4 \strokec4 ());\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\cb3     \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "%s\cf11 \strokec11 \\"
\f1 \cf7 \strokec7 \'c0\'df
\f0  
\f1 \'b5\'e9\'be\'ee\'ba\'b8\'b0\'d4
\f0 . 
\f1 \'bf\'be\'b3\'af\'bf\'be\'b3\'af
\f0  
\f1 \'c7\'d1
\f0  
\f1 \'bb\'ea
\f0  
\f1 \'b2\'c0\'b4\'eb\'b1\'e2\'bf\'a1
\f0  
\f1 \'c0\'cc\'bc\'bc\'bb\'f3
\f0  
\f1 \'b8\'f0\'b5\'e7
\f0  
\f1 \'c1\'f6\'bd\'c4\'c0\'bb
\f0  
\f1 \'c5\'eb\'b4\'de\'c7\'d1
\f0  
\f1 \'bc\'b1\'c0\'ce\'c0\'cc
\f0  
\f1 \'c0\'d6\'be\'fa\'be\'ee
\f0 .\cf11 \strokec11 \\n\cf7 \strokec7 "\cf4 \strokec4 ,\cf8 \strokec8 string\cf4 \strokec4 (\cf12 \strokec12 4\cf4 \strokec4 *\cf9 \strokec9 cnt\cf4 \strokec4 ,\cf7 \strokec7 '_'\cf4 \strokec4 ).\cf10 \strokec10 c_str\cf4 \strokec4 ());\cb1 \
\cb3     \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "%s
\f1 \'b8\'b6\'c0\'bb
\f0  
\f1 \'bb\'e7\'b6\'f7\'b5\'e9\'c0\'ba
\f0  
\f1 \'b8\'f0\'b5\'ce
\f0  
\f1 \'b1\'d7
\f0  
\f1 \'bc\'b1\'c0\'ce\'bf\'a1\'b0\'d4
\f0  
\f1 \'bc\'f6\'b8\'b9\'c0\'ba
\f0  
\f1 \'c1\'fa\'b9\'ae\'c0\'bb
\f0  
\f1 \'c7\'df\'b0\'ed
\f0 , 
\f1 \'b8\'f0\'b5\'ce
\f0  
\f1 \'c1\'f6\'c7\'fd\'b7\'d3\'b0\'d4
\f0  
\f1 \'b4\'eb\'b4\'e4\'c7\'d8
\f0  
\f1 \'c1\'d6\'be\'fa\'c1\'f6
\f0 .\cf11 \strokec11 \\n\cf7 \strokec7 "\cf4 \strokec4 ,\cf8 \strokec8 string\cf4 \strokec4 (\cf12 \strokec12 4\cf4 \strokec4 *\cf9 \strokec9 cnt\cf4 \strokec4 ,\cf7 \strokec7 '_'\cf4 \strokec4 ).\cf10 \strokec10 c_str\cf4 \strokec4 ());\cb1 \
\cb3     \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "%s
\f1 \'b1\'d7\'c0\'c7
\f0  
\f1 \'b4\'e4\'c0\'ba
\f0  
\f1 \'b4\'eb\'ba\'ce\'ba\'d0
\f0  
\f1 \'bf\'c7\'be\'d2\'b4\'d9\'b0\'ed
\f0  
\f1 \'c7\'cf\'b3\'d7
\f0 . 
\f1 \'b1\'d7\'b7\'b1\'b5\'a5
\f0  
\f1 \'be\'ee\'b4\'c0
\f0  
\f1 \'b3\'af
\f0 , 
\f1 \'b1\'d7
\f0  
\f1 \'bc\'b1\'c0\'ce\'bf\'a1\'b0\'d4
\f0  
\f1 \'c7\'d1
\f0  
\f1 \'bc\'b1\'ba\'f1\'b0\'a1
\f0  
\f1 \'c3\'a3\'be\'c6\'bf\'cd\'bc\'ad
\f0  
\f1 \'b9\'b0\'be\'fa\'be\'ee
\f0 .\cf11 \strokec11 \\"\\n\cf7 \strokec7 "\cf4 \strokec4 ,\cf8 \strokec8 string\cf4 \strokec4 (\cf12 \strokec12 4\cf4 \strokec4 *\cf9 \strokec9 cnt\cf4 \strokec4 ,\cf7 \strokec7 '_'\cf4 \strokec4 ).\cf10 \strokec10 c_str\cf4 \strokec4 ());\cb1 \
\cb3     \cb1 \
\cb3     \cf10 \strokec10 recursion\cf4 \strokec4 (\cf9 \strokec9 cnt\cf4 \strokec4 +\cf12 \strokec12 1\cf4 \strokec4 );\cb1 \
\cb3     \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "%s
\f1 \'b6\'f3\'b0\'ed
\f0  
\f1 \'b4\'e4\'ba\'af\'c7\'cf\'bf\'b4\'c1\'f6
\f0 .\cf11 \strokec11 \\n\cf7 \strokec7 "\cf4 \strokec4 ,\cf8 \strokec8 string\cf4 \strokec4 (\cf12 \strokec12 4\cf4 \strokec4 *\cf9 \strokec9 cnt\cf4 \strokec4 ,\cf7 \strokec7 '_'\cf4 \strokec4 ).\cf10 \strokec10 c_str\cf4 \strokec4 ());\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\cb3 \}\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb3 \strokec6 int\cf4 \strokec4  \cf10 \strokec10 main\cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 \{\cb1 \
\cb3     \cf10 \strokec10 scanf\cf4 \strokec4 (\cf7 \strokec7 "%d"\cf4 \strokec4 ,&\cf9 \strokec9 n\cf4 \strokec4 );\cb1 \
\cb3     \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "
\f1 \'be\'ee\'b4\'c0
\f0  
\f1 \'c7\'d1
\f0  
\f1 \'c4\'c4\'c7\'bb\'c5\'cd\'b0\'f8\'c7\'d0\'b0\'fa
\f0  
\f1 \'c7\'d0\'bb\'fd\'c0\'cc
\f0  
\f1 \'c0\'af\'b8\'ed\'c7\'d1
\f0  
\f1 \'b1\'b3\'bc\'f6\'b4\'d4\'c0\'bb
\f0  
\f1 \'c3\'a3\'be\'c6\'b0\'a1
\f0  
\f1 \'b9\'b0\'be\'fa\'b4\'d9
\f0 .\cf11 \strokec11 \\n\cf7 \strokec7 "\cf4 \strokec4 );\cb1 \
\cb3     \cf10 \strokec10 recursion\cf4 \strokec4 (\cf12 \strokec12 0\cf4 \strokec4 );\cb1 \
\
\cb3 \}\
\
\
\
\
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \strokec2 //10994 
\f1 \'ba\'b0\'c2\'ef\'b1\'e2
\f0 - 19 
\f1 \'c4\'c4\'c5\'cd\'bd\'c4
\f0 .cpp\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #include\cf6 \strokec6  \cf7 \strokec7 <stdio.h>\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #include\cf6 \strokec6  \cf7 \strokec7 <string>\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 using\cf4 \strokec4  \cf6 \strokec6 namespace\cf4 \strokec4  \cf8 \strokec8 std\cf4 \strokec4 ;\cb1 \
\
\cf6 \cb3 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 n\cf4 \strokec4 ;\cb1 \
\cf6 \cb3 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 widesestSide\cf4 \strokec4 ;\cb1 \
\cf6 \cb3 \strokec6 void\cf4 \strokec4  \cf10 \strokec10 draw\cf4 \strokec4 (\cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 remain\cf4 \strokec4 , \cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 form\cf4 \strokec4 );\cb1 \
\
\cf6 \cb3 \strokec6 int\cf4 \strokec4  \cf10 \strokec10 Tseq\cf4 \strokec4 (\cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 num\cf4 \strokec4 )\{\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf12 \strokec12 1\cf4 \strokec4 +\cf12 \strokec12 4\cf4 \strokec4 *(\cf9 \strokec9 num\cf4 \strokec4 -\cf12 \strokec12 1\cf4 \strokec4 );\cb1 \
\cb3 \}\cb1 \
\
\cf6 \cb3 \strokec6 void\cf4 \strokec4  \cf10 \strokec10 wrap\cf4 \strokec4 (\cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 shell\cf4 \strokec4 , \cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 form\cf4 \strokec4 )\cb1 \
\cb3 \{\cb1 \
\cb3     \cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 side\cf4 \strokec4 = \cf10 \strokec10 Tseq\cf4 \strokec4 (\cf9 \strokec9 shell\cf4 \strokec4 );\cb1 \
\cb3     \cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 remain\cf4 \strokec4  = (\cf9 \strokec9 widesestSide\cf4 \strokec4 -\cf9 \strokec9 side\cf4 \strokec4 )>>\cf12 \strokec12 1\cf4 \strokec4 ;\cb1 \
\cb3     \cf10 \strokec10 draw\cf4 \strokec4 (\cf9 \strokec9 remain\cf4 \strokec4 , \cf9 \strokec9 form\cf4 \strokec4 );\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4 (\cf9 \strokec9 shell\cf4 \strokec4 ==\cf12 \strokec12 1\cf4 \strokec4 ) \cf5 \strokec5 return\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4 (\cf9 \strokec9 form\cf4 \strokec4 ) \cf10 \strokec10 wrap\cf4 \strokec4 (\cf9 \strokec9 shell\cf4 \strokec4 -\cf12 \strokec12 1\cf4 \strokec4 , \cf9 \strokec9 form\cf4 \strokec4 ^\cf12 \strokec12 1\cf4 \strokec4 );\cf2 \strokec2  //XOR: 
\f1 \'b5\'ce
\f0  
\f1 \'ba\'f1\'c6\'ae
\f0  
\f1 \'b4\'d9\'b8\'a6
\f0  
\f1 \'b6\'a7
\f0  1\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 else\cf4 \strokec4  \cf10 \strokec10 wrap\cf4 \strokec4 (\cf9 \strokec9 shell\cf4 \strokec4 ,\cf9 \strokec9 form\cf4 \strokec4 ^\cf12 \strokec12 1\cf4 \strokec4 );\cb1 \
\cb3     \cf10 \strokec10 draw\cf4 \strokec4 (\cf9 \strokec9 remain\cf4 \strokec4 , \cf9 \strokec9 form\cf4 \strokec4 );\cb1 \
\
\cb3 \}\cb1 \
\
\cf6 \cb3 \strokec6 void\cf4 \strokec4  \cf10 \strokec10 draw\cf4 \strokec4 (\cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 remain\cf4 \strokec4 , \cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 form\cf4 \strokec4 )\cb1 \
\cb3 \{\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4 (\cf9 \strokec9 form\cf4 \strokec4 ==\cf12 \strokec12 0\cf4 \strokec4 )\cb1 \
\cb3     \{   \cb1 \
\cb3         \cb1 \
\cb3         \cf5 \strokec5 for\cf4 \strokec4 (\cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 i\cf4 \strokec4 =\cf12 \strokec12 1\cf4 \strokec4 ; \cf9 \strokec9 i\cf4 \strokec4 <=\cf9 \strokec9 widesestSide\cf4 \strokec4 ;++\cf9 \strokec9 i\cf4 \strokec4 )\cb1 \
\cb3         \{\cb1 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4 ((\cf9 \strokec9 i\cf4 \strokec4 <=\cf9 \strokec9 remain\cf4 \strokec4 ||\cf9 \strokec9 i\cf4 \strokec4 >=\cf9 \strokec9 widesestSide\cf4 \strokec4 -\cf9 \strokec9 remain\cf4 \strokec4 ) && (\cf9 \strokec9 i\cf4 \strokec4 %\cf12 \strokec12 2\cf4 \strokec4 ==\cf12 \strokec12 0\cf4 \strokec4 )) \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 " "\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 else\cf4 \strokec4  \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "*"\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3         \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "\cf11 \strokec11 \\n\cf7 \strokec7 "\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3     \cf5 \strokec5 else\cf4 \strokec4 \{\cb1 \
\
\cb3         \cf5 \strokec5 for\cf4 \strokec4 (\cf6 \strokec6 int\cf4 \strokec4  \cf9 \strokec9 i\cf4 \strokec4 =\cf12 \strokec12 1\cf4 \strokec4 ; \cf9 \strokec9 i\cf4 \strokec4 <=\cf9 \strokec9 widesestSide\cf4 \strokec4 ;++\cf9 \strokec9 i\cf4 \strokec4 )\cb1 \
\cb3         \{\cb1 \
\cb3             \cf5 \strokec5 if\cf4 \strokec4 ((\cf9 \strokec9 i\cf4 \strokec4 <=\cf9 \strokec9 remain\cf4 \strokec4 +\cf12 \strokec12 1\cf4 \strokec4 ||\cf9 \strokec9 i\cf4 \strokec4 >=\cf9 \strokec9 widesestSide\cf4 \strokec4 -\cf9 \strokec9 remain\cf4 \strokec4 -\cf12 \strokec12 1\cf4 \strokec4 ) && (\cf9 \strokec9 i\cf4 \strokec4 %\cf12 \strokec12 2\cf4 \strokec4 )) \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "*"\cf4 \strokec4 );\cb1 \
\cb3             \cf5 \strokec5 else\cf4 \strokec4  \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 " "\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3         \cf10 \strokec10 printf\cf4 \strokec4 (\cf7 \strokec7 "\cf11 \strokec11 \\n\cf7 \strokec7 "\cf4 \strokec4 );\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\cf6 \cb3 \strokec6 int\cf4 \strokec4  \cf10 \strokec10 main\cf4 \strokec4 ()\cb1 \
\cb3 \{\cb1 \
\cb3     \cf10 \strokec10 scanf\cf4 \strokec4 (\cf7 \strokec7 "%d"\cf4 \strokec4 ,&\cf9 \strokec9 n\cf4 \strokec4 );\cb1 \
\cb3     \cf9 \strokec9 widesestSide\cf4 \strokec4 = \cf10 \strokec10 Tseq\cf4 \strokec4 (\cf9 \strokec9 n\cf4 \strokec4 );\cb1 \
\cb3     \cf10 \strokec10 wrap\cf4 \strokec4 (\cf9 \strokec9 n\cf4 \strokec4 ,\cf12 \strokec12 0\cf4 \strokec4 );\cb1 \
\cb3     \cb1 \
\cb3 \}\cb1 \
\
\
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf13 \cb14 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 //10994 
\f1 \'ba\'b0\'c2\'ef\'b1\'e2
\f0 - 19 
\f1 \'c0\'ce\'b0\'a3\'bd\'c4
\f0 .cpp\cf4 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 #include <iostream>\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 char starArr[400][400];\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 void star(int x, int y, int n) \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     if (n == 1) \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2         starArr[x][y] = '*';\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2         return;\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     for (int i = 0; i < 4 * n - 3; ++i) \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2         starArr[x][y + i] = '*'; //
\f1 \'c1\'f6\'ba\'d8
\f0 \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2         starArr[x + 4 * n - 4][y + i] = '*'; //
\f1 \'bf\'ec\'ba\'ae
\f0 \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2         starArr[x + i][y + 4 * n - 4] = '*'; //
\f1 \'b9\'d9\'b4\'da
\f0 \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2         starArr[x + i][y] = '*'; //
\f1 \'c1\'c2\'ba\'ae
\f0 \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     star(x + 2, y + 2, n - 1);\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 int main() \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     int n;\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     std::cin >> n;\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     for (int i = 0; i < 4 * n - 3; ++i) \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2         for (int j = 0; j < 4 * n - 3; ++j) \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2             starArr[i][j] = ' ';\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2         \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     star(0, 0, n);\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     for (int i = 0; i < 4 * n - 3; ++i) \{\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2         std::cout << starArr[i] << "\\n";\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2     \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 \
\
\
\
\
\
\
\
\
\
\
# 18511 
\f1 \'c5\'ab
\f0  
\f1 \'bc\'f6
\f0  
\f1 \'b1\'b8\'bc\'ba\'c7\'cf\'b1\'e2
\f0 \cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 from\cf4 \strokec4  \cf8 \strokec8 sys\cf4 \strokec4  \cf5 \strokec5 import\cf4 \strokec4  *\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf15 \cb3 \strokec15 N\cf4 \strokec4 , \cf15 \strokec15 K\cf4 \strokec4  = \cf10 \strokec10 map\cf4 \strokec4 (\cf8 \strokec8 int\cf4 \strokec4 , \cf10 \strokec10 input\cf4 \strokec4 ().\cf10 \strokec10 split\cf4 \strokec4 ())\cb1 \
\cf15 \cb3 \strokec15 L\cf4 \strokec4  = [\cf8 \strokec8 int\cf4 \strokec4 (\cf9 \strokec9 i\cf4 \strokec4 ) \cf5 \strokec5 for\cf4 \strokec4  \cf9 \strokec9 i\cf4 \strokec4  \cf6 \strokec6 in\cf4 \strokec4  \cf10 \strokec10 input\cf4 \strokec4 ().\cf10 \strokec10 split\cf4 \strokec4 ()]\cb1 \
\cf15 \cb3 \strokec15 L\cf4 \strokec4 .\cf10 \strokec10 sort\cf4 \strokec4 (\cf9 \strokec9 reverse\cf4 \strokec4 =\cf6 \strokec6 True\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb3 \strokec9 lenN\cf4 \strokec4 =\cf10 \strokec10 len\cf4 \strokec4 (\cf8 \strokec8 str\cf4 \strokec4 (\cf15 \strokec15 N\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl360\partightenfactor0
\cf15 \cb3 \strokec15 S\cf4 \strokec4  = [\cf7 \strokec7 '-'\cf4 \strokec4 ]*\cf9 \strokec9 lenN\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf6 \cb3 \strokec6 def\cf4 \strokec4  \cf10 \strokec10 rec\cf4 \strokec4 (\cf9 \strokec9 digit\cf4 \strokec4 ,\cf9 \strokec9 S\cf4 \strokec4 ,\cf9 \strokec9 end\cf4 \strokec4 ):\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  \cf9 \strokec9 digit\cf4 \strokec4 ==\cf9 \strokec9 end\cf4 \strokec4 : \cb1 \
\cb3         \cf9 \strokec9 num\cf4 \strokec4 = \cf8 \strokec8 int\cf4 \strokec4 (\cf7 \strokec7 ""\cf4 \strokec4 .\cf10 \strokec10 join\cf4 \strokec4 (\cf9 \strokec9 S\cf4 \strokec4 ));\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  \cf9 \strokec9 num\cf4 \strokec4 <=\cf15 \strokec15 N\cf4 \strokec4 : \cb1 \
\cb3             \cf10 \strokec10 print\cf4 \strokec4 (\cf9 \strokec9 num\cf4 \strokec4 )\cb1 \
\cb3             \cf10 \strokec10 exit\cf4 \strokec4 ()\cb1 \
\cb3     \cf5 \strokec5 else\cf4 \strokec4 :\cb1 \
\cb3         \cf5 \strokec5 for\cf4 \strokec4  \cf9 \strokec9 el\cf4 \strokec4  \cf6 \strokec6 in\cf4 \strokec4  \cf15 \strokec15 L\cf4 \strokec4 :\cb1 \
\cb3             \cf9 \strokec9 tempS\cf4 \strokec4 = \cf9 \strokec9 S\cf4 \strokec4 [:]\cb1 \
\cb3             \cf9 \strokec9 tempS\cf4 \strokec4 [\cf9 \strokec9 digit\cf4 \strokec4 ]=\cf8 \strokec8 str\cf4 \strokec4 (\cf9 \strokec9 el\cf4 \strokec4 )\cb1 \
\cb3             \cf10 \strokec10 rec\cf4 \strokec4 (\cf9 \strokec9 digit\cf4 \strokec4 +\cf12 \strokec12 1\cf4 \strokec4 ,\cf9 \strokec9 tempS\cf4 \strokec4 ,\cf9 \strokec9 end\cf4 \strokec4 )\cb1 \
\
\cf10 \cb3 \strokec10 rec\cf4 \strokec4 (\cf12 \strokec12 0\cf4 \strokec4 ,\cf15 \strokec15 S\cf4 \strokec4 ,\cf9 \strokec9 lenN\cf4 \strokec4 )\cb1 \
\cf10 \cb3 \strokec10 rec\cf4 \strokec4 (\cf12 \strokec12 0\cf4 \strokec4 ,[\cf7 \strokec7 '-'\cf4 \strokec4 ]*(\cf9 \strokec9 lenN\cf4 \strokec4 -\cf12 \strokec12 1\cf4 \strokec4 ),\cf9 \strokec9 lenN\cf4 \strokec4 -\cf12 \strokec12 1\cf4 \strokec4 ) \cf2 \strokec2 # 
\f1 \'c0\'db\'c0\'ba
\f0  
\f1 \'c0\'da\'b8\'ae\'bc\'f6\'c0\'cf\'b6\'a7
\f0 .\cf4 \cb1 \strokec4 \
\
\
\
\
\
\
\
\
\
\
\
\cf2 \cb3 \strokec2 # 5568 
\f1 \'c4\'ab\'b5\'e5\'b3\'f5\'b1\'e2
\f0 .py\cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9 n\cf4 \strokec4 = \cf8 \strokec8 int\cf4 \strokec4 (\cf10 \strokec10 input\cf4 \strokec4 ())\cb1 \
\cf9 \cb3 \strokec9 k\cf4 \strokec4 = \cf8 \strokec8 int\cf4 \strokec4 (\cf10 \strokec10 input\cf4 \strokec4 ())\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf15 \cb3 \strokec15 L\cf4 \strokec4 =[\cf10 \strokec10 input\cf4 \strokec4 () \cf5 \strokec5 for\cf4 \strokec4  \cf9 \strokec9 _\cf4 \strokec4  \cf6 \strokec6 in\cf4 \strokec4  \cf8 \strokec8 range\cf4 \strokec4 (\cf9 \strokec9 n\cf4 \strokec4 )]\cb1 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf9 \cb3 \strokec9 ans\cf4 \strokec4 = []\cb1 \
\cf6 \cb3 \strokec6 def\cf4 \strokec4  \cf10 \strokec10 selection\cf4 \strokec4 (\cf9 \strokec9 floor\cf4 \strokec4 , \cf9 \strokec9 sel\cf4 \strokec4 , \cf9 \strokec9 bit\cf4 \strokec4 , \cf9 \strokec9 s\cf4 \strokec4 ):\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  \cf9 \strokec9 sel\cf4 \strokec4 ==\cf9 \strokec9 k\cf4 \strokec4 :  \cb1 \
\cb3         \cf9 \strokec9 ans\cf4 \strokec4 .\cf10 \strokec10 append\cf4 \strokec4 (\cf9 \strokec9 s\cf4 \strokec4 )\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 for\cf4 \strokec4  \cf9 \strokec9 i\cf4 \strokec4  \cf6 \strokec6 in\cf4 \strokec4  \cf8 \strokec8 range\cf4 \strokec4 (\cf9 \strokec9 n\cf4 \strokec4 ):\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  \cf9 \strokec9 bit\cf4 \strokec4 [\cf9 \strokec9 i\cf4 \strokec4 ]==\cf7 \strokec7 '0'\cf4 \strokec4 :\cb1 \
\cb3             \cf9 \strokec9 tmp\cf4 \strokec4 = \cf9 \strokec9 bit\cf4 \strokec4 [:]\cb1 \
\cb3             \cf9 \strokec9 tmp\cf4 \strokec4 [\cf9 \strokec9 i\cf4 \strokec4 ]=\cf7 \strokec7 '1'\cf4 \cb1 \strokec4 \
\cb3             \cf10 \strokec10 selection\cf4 \strokec4 (\cf9 \strokec9 floor\cf4 \strokec4 +\cf12 \strokec12 1\cf4 \strokec4 , \cf9 \strokec9 sel\cf4 \strokec4 +\cf12 \strokec12 1\cf4 \strokec4 , \cf9 \strokec9 tmp\cf4 \strokec4 ,\cf9 \strokec9 s\cf4 \strokec4 +\cf15 \strokec15 L\cf4 \strokec4 [\cf9 \strokec9 i\cf4 \strokec4 ])\cb1 \
\
\cb3     \cf5 \strokec5 if\cf4 \strokec4  \cf9 \strokec9 floor\cf4 \strokec4 == \cf9 \strokec9 n\cf4 \strokec4 +\cf12 \strokec12 1\cf4 \strokec4 : \cf2 \strokec2 # 
\f1 \'c3\'ca\'b0\'fa
\f0 \cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 return\cf4 \cb1 \strokec4 \
\
\
\cf10 \cb3 \strokec10 selection\cf4 \strokec4 (\cf12 \strokec12 0\cf4 \strokec4 ,\cf12 \strokec12 0\cf4 \strokec4 ,\cf8 \strokec8 list\cf4 \strokec4 (\cf7 \strokec7 '0'\cf4 \strokec4 *\cf9 \strokec9 n\cf4 \strokec4 ), \cf7 \strokec7 ''\cf4 \strokec4 )\cb1 \
\cf9 \cb3 \strokec9 ans\cf4 \strokec4 =\cf8 \strokec8 set\cf4 \strokec4 (\cf9 \strokec9 ans\cf4 \strokec4 )\cb1 \
\cf9 \cb3 \strokec9 ans\cf4 \strokec4 =\cf8 \strokec8 list\cf4 \strokec4 (\cf9 \strokec9 ans\cf4 \strokec4 )\cb1 \
\cf10 \cb3 \strokec10 print\cf4 \strokec4 (\cf10 \strokec10 len\cf4 \strokec4 (\cf9 \strokec9 ans\cf4 \strokec4 ))\cb1 \
\
\
\
\
\
\
\
\
\
\
\
\cf2 \cb3 \strokec2 #1769 3
\f1 \'c0\'c7
\f0  
\f1 \'b9\'e8\'bc\'f6
\f0 \cf4 \cb1 \strokec4 \
\cf9 \cb3 \strokec9 input\cf4 \strokec4 = \cf10 \strokec10 input\cf4 \strokec4 ()\cb1 \
\
\cf9 \cb3 \strokec9 cnt\cf4 \strokec4 =\cf12 \strokec12 0\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 def\cf4 \strokec4  \cf10 \strokec10 add\cf4 \strokec4 (\cf9 \strokec9 s\cf4 \strokec4 ):\cb1 \
\cb3     \cf6 \strokec6 global\cf4 \strokec4  \cf9 \strokec9 cnt\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 num\cf4 \strokec4 = \cf8 \strokec8 int\cf4 \strokec4 (\cf9 \strokec9 s\cf4 \strokec4 )\cb1 \
\cb3     \cf5 \strokec5 if\cf4 \strokec4  \cf9 \strokec9 num\cf4 \strokec4 <\cf12 \strokec12 10\cf4 \strokec4 :\cb1 \
\cb3         \cf10 \strokec10 print\cf4 \strokec4 (\cf9 \strokec9 cnt\cf4 \strokec4 )\cb1 \
\cb3         \cf5 \strokec5 if\cf4 \strokec4  \cf6 \strokec6 not\cf4 \strokec4  \cf9 \strokec9 num\cf4 \strokec4 %\cf12 \strokec12 3\cf4 \strokec4 :\cb1 \
\cb3             \cf10 \strokec10 print\cf4 \strokec4 (\cf7 \strokec7 'YES'\cf4 \strokec4 )\cb1 \
\cb3         \cf5 \strokec5 else\cf4 \strokec4 :\cb1 \
\cb3             \cf10 \strokec10 print\cf4 \strokec4 (\cf7 \strokec7 'NO'\cf4 \strokec4 )\cb1 \
\cb3         \cf5 \strokec5 return\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 cnt\cf4 \strokec4 +=\cf12 \strokec12 1\cf4 \cb1 \strokec4 \
\cb3     \cf9 \strokec9 sumup\cf4 \strokec4 =\cf10 \strokec10 sum\cf4 \strokec4 ([\cf8 \strokec8 int\cf4 \strokec4 (\cf9 \strokec9 el\cf4 \strokec4 ) \cf5 \strokec5 for\cf4 \strokec4  \cf9 \strokec9 el\cf4 \strokec4  \cf6 \strokec6 in\cf4 \strokec4  \cf9 \strokec9 s\cf4 \strokec4 ])\cb1 \
\cb3     \cf10 \strokec10 add\cf4 \strokec4 (\cf8 \strokec8 str\cf4 \strokec4 (\cf9 \strokec9 sumup\cf4 \strokec4 ))\cb1 \
\
\cf10 \cb3 \strokec10 add\cf4 \strokec4 (\cf9 \strokec9 input\cf4 \strokec4 )\cb1 \
\cb3     \cb1 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \
}