import numpy as np
import itertools

a, b = [int(i) for i in input().split()]
maaaap = input()
x = []

for i in range(a): # a가 세로
    x.append([0]*b)



for i in range(a): # L안에 지도의 내용물을 넣어주고
    mapp = input()
    for j in range(b):
        if (mapp[j] == 'L'):
            x[i][j] = 1 # 1을 땅으로
        elif (mapp[j] == 'S'):
            x[i][j] = 2 # 2 바다
        else:
            x[i][j] = 0 # 물음표



def count_lands(x):
    iland = 101  # 현재 확인한 육지 번호
    while(True):
        # 1을 찾음
        onepos = np.transpose(np.where(x == 1))
        if len(onepos) == 0:
            #print(x)
            return np.max(x) - 100
        r, c = onepos[0]
        x[r, c] = iland
        # 그와 인접한 것 또한 모두 iland 로 바꿈
        while(True):
            ichanged = False
            for i in range(0, x.shape[0]):
                for j in range(0, x.shape[1]):
                    # 위, 아래, 좌, 우에 0이 있으면 iland로 변경
                    if j > 0 and x[i,j] == iland and x[i,j-1] == 1:
                        x[i,j-1] = iland
                        ichanged = True
                    if j < x.shape[1] - 1 and x[i,j] == iland and x[i,j+1] == 1:
                        x[i,j+1] = iland
                        ichanged = True
                    if i > 0 and x[i,j] == iland and x[i-1,j] == 1:
                        x[i-1,j] = iland
                        ichanged = True
                    if i < x.shape[0] - 1 and x[i,j] == iland and x[i+1,j] == 1:
                        x[i+1,j] = iland
                        ichanged = True
            if not ichanged:
                break
        iland += 1
    return 0

# x를 flatten 시키고 0이 있는 위치를 구함
x = np.array(x)
xshape = x.shape

# 1인 곳의 위치를 생성하기 위한 for 문
x = x.flatten()
zeropos = np.where(x == 0)[0]
land_cnts = []
for numzero in range(len(zeropos)):
    for oneidx in itertools.combinations(np.arange(len(zeropos)), numzero):
        # 문제에서 주어진 탬플릿을 복사
        xtest = np.copy(x)

        # 선택된 위치를 육지로 설정
        np.put(xtest, zeropos.take(oneidx), 1)

        # 인접한 1의 갯수를 구함
        land_cnts.append(count_lands(xtest.reshape(xshape)))

# 최소 땅 번호
print(np.min(land_cnts))

# 최대 땅 번호
print(np.max(land_cnts))
