# include <iostream>
# include <string>
int main(){
    std::cout <<"Enter your name: ";
    std::string name;
    std::cin >> name; // 공백이나 EOF 날 때까지 문자들을 읽어서 변수 name에 넣는다

    std::cout<< "Hello" << name << "!" <<std::endl;
    return 0;

    //버퍼: cout 로 메세지 출력할 때 출력 내용이 표준 출력스트림과 관련된 버퍼에 저장된다
    // cin으로 입력 받으면 cout버퍼를 지우므로 메세지가 화면에 출력된다

    //출력: 버퍼 라이브러리는 버퍼를 사용하여 출력할 문자를 모았다가 필요할 때만 버퍼에 저정한 내용을 출력하고 버퍼를 비운다

    //std::endl; : 조작어 (manipulator) : 스트림에 조작어를 넣으면 문자를 넣는 것과는 다른 동작을 실행함으로써 스트림을 조작한다
    // 사용하지 않으면 행바꿈을 하지 않고 동일한 행에서 입력을 기다린다

    // << 연산자에는 왼쪽 우선 결합성 left-assosiative가 있다. 각 << 연산자는 자신을 기준으로 왼쪽의 모든 부분과 오른쪽의 최소부분을 피연산다로 사용한다
    // 모든 피연산자는 타입이 있다. 라이브러리는, 스트림 기반 출력을 제공하는 타입의 이름을 std::ostream  이라 정의한다

    // std:: 해당 이름이 std 라는 네임스페이스에 속해있음
    // namespace: std
    // std::string name; 에는 이름이 있는 객체인 변수를 초기화하는 동작이 있다. 표준 라이브러리에서 모든 문자열 객체가 값을 갖는다고 정해놓았기 때문
    // 객체와 변수를 구분하라. 객체: 타입이 정대힌 메모리의 일부. 변수는 이름이 있는 객체 object이다
    // std::cin :  공백이나 EOF나기 전까지 입력을 받음
    // 버퍼: 출력을 모았다가 꽉 차거나 입력받거나 코드 있으면 비움
}